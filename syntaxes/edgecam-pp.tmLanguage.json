{
	"information_for_contributors": [
		"If you want to provide a fix or improvement, please create a pull request against the repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/DanielSchmidt1985/vscode.extension.edgecam-pp/commit/60a33e82aef36aeeecf46a115e6a5a967e1cfc79",
	"name": "edgecam-pp",
	"scopeName": "source.edgecam-pp",
	"patterns": [
		{
			"include": "#output"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#procedures"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#keywords-var"
		},
		{
			"include": "#system-variables"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#calls"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#lables"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#brackets-round"
		},
		{
			"include": "#ascii-code"
		}
	],
	"repository": {
		"commas": {
			"patterns": [
				{
					"match": ",",
					"name": "punctuation.separator.list.comma.edgecam-pp"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"match": "[+-]{0,1}[0-9]+\\.{0,1}[0-9]*",
					"name": "constant.numeric.edgecam-pp"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"match": "^\\s*\\*.*",
					"name": "comment.line.edgecam-pp"
				},
				{
					"match": "^\\s*;[^I][^F].*",
					"name": "comment.line.edgecam-pp"
				},
				{
					"match": ";.*",
					"name": "comment.bloc.edgecam-pp"
				}
			]
		},
		"keywords-var": {
			"patterns": [
				{
					"match": "(?i)(%(?:declare|getcpl|load|output|cancel|output-if-changed|always-output|dont-output))\\s*(=)\\s*([#$,a-z0-9]*)",
					"captures": {
						"1": {
							"name": "keyword.control.edgecam-pp"
						},
						"2": {
							"name": "keyword.operator.edgecam-pp"
						},
						"3": {
							"patterns": [
								{
									"include": "#var"
								},
								{
									"include": "#variables"
								}
							]
						}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"match": "(?i)%(?:data1|data2|nocycle|cxcycle)",
					"name": "keyword.control.edgecam-pp"
				},
				{
					"match": "(?i)%(?:goto|if|then|else|endif)",
					"name": "keyword.control.edgecam-pp"
				}
			]
		},
		"calls": {
			"patterns": [
				{
					"match": "(?i)(%call)\\s*=\\s*([a-z][a-z0-9_-]*)",
					"captures": {
						"1": {
							"name": "keyword.control.call.edgecam-pp"
						},
						"2": {
							"name": "entity.name.function.edgecam-pp"
						}
					}
				}
			]
		},
		"procedures": {
			"patterns": [
				{
					"match": "(?i)^\\s*(%(?:PROCEDURE|MACRO|MACHINE))\\s*=\\s*(.*)\\s*",
					"captures": {
						"1": {
							"name": "keyword.others.proc-start.edgecam-pp"
						},
						"2": {
							"name": "entity.name.function.edgecam-pp"
						}
					}
				},
				{
					"match": "(?i)^\\s*%(?:FORMAT|COMMAND|ENDMACH|ENDCOMMAND|ENDM|ENDF)",
					"name": "keyword.others.proc-end.edgecam-pp"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"match": "(?i)(abs|sin|cos|tan|int|strlength|strcat|strmid|strtonum|numtostr)\\(",
					"captures": {
						"1": {
							"name": "support.function.edgecam-pp"
						}
					}
				}
			]
		},
		"output": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.double.edgecam-pp"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "string.quoted.double.edgecam-pp"
				}
			},
			"name": "string.quoted.double.edgecam-pp",
			"patterns": [
				{
					"include": "#output-vars"
				},
				{
					"include": "#ascii-code"
				}
			]
		},
		"brackets-round": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "other"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "other"
				}
			},
			"name": "other",
			"patterns": [
				{
					"include": "#commas"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#var"
				}
			]
		},
		"var": {
			"patterns": [
				{
					"match": "(?i)[#$][a-z][a-z0-9]*",
					"name": "variable.other.var.edgecam-pp"
				},
				{
					"match": "(?i)[a-z][a-z0-9]*",
					"name": "entity.name.type.namespace.edgecam-pp"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"match": "(?i)\\s*([^%][#$]*[a-z0-9]+)\\s*([=<>*+-/]{1,2})\\s*([#$+-0-9]*\\.{0,1}[a-z0-9_-]*)\\s*",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#var"
								}
							]
						},
						"2": {
							"name": "keyword.operator.edgecam-pp"
						},
						"3": {
							"patterns": [
								{
									"include": "#numbers"
								},
								{
									"match": "(?i)(.*[_].*)",
									"name": "string.quoted.double.edgecam-pp"
								},
								{
									"include": "#var"
								}
							]
						}
					}
				}
			]
		},
		"output-vars": {
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "string.regexp.edgecam-pp"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "string.regexp.edgecam-pp"
				}
			},
			"name": "string.regexp.edgecam-pp"
		},
		"strings": {
			"patterns": [
				{
					"match": "\".*\"",
					"name": "string.quoted.double.edgecam-pp"
				}
			]
		},
		"lables": {
			"patterns": [
				{
					"match": "(?i)@[a-z0-9_-]*",
					"name": "keyword.other.label.edgecam-pp"
				}
			]
		},
		"ascii-code": {
			"patterns": [
				{
					"match": "\\{[0-9]{1,3}\\}",
					"name": "constant.character.escape.edgecam-pp"
				}
			]
		}
	}
}